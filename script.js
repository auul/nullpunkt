var canvas = document.getElementById("Canvas");
var ctx    = canvas.getContext("2d");

class Bitmap
{
	constructor(width, height, bitString)
	{
		let size = width * height;

		this.rect   = [0, 0, width, height];
		this.width  = width;
		this.height = height;
		this.bmp    = new Array(size);

		if (bitString) {
			for (let i = 0; i < size; i++) {
				if (bitString.charAt(i) == "1") {
					this.bmp[i] = true;
				} else {
					this.bmp[i] = false
				}
			}
		} else {
			for (let i = 0; i < size; i++) {
				this.bmp[i] = false;
			}
		}
	}

	getWidth() { return this.rect[2]; }
	getHeight() { return this.rect[3]; }

	blit(rect, x, y, scale, color)
	{
		if (!rect) { rect = this.rect; }

		ctx.fillStyle = color;

		for (let j = 0; j < rect[3]; j++) {
			for (let i = 0; i < rect[2]; i++) {
				if (this.bmp[i + rect[0]
					     + (j + rect[1]) * this.rect[2]]) {
					ctx.fillRect(x + scale * i,
						     y + scale * j, scale,
						     scale);
				}
			}
		}
	}
}

const font = new Bitmap(
 96, 48,


class Board
{
	constructor(rect, cols, rows, bitString)
	{
		let scale = 1.0;

		if (rect[2] / cols < rect[3] / rows) {
			scale = rect[2] / cols;
		} else {
			scale = rect[3] / rows;
		}

		rect[0] += rect[2] - scale * cols;
		rect[1] += rect[3] - scale * rows;
		rect[2]   = scale * cols;
		rect[3]   = scale * rows;
		this.rect = rect;

		let size  = cols * rows;
		this.grid = new Array(size);

		for (let i = 0; i < size; i++) {
			if (bitString.charAt(i) == "1") {
				this.grid[i] = true;
			} else {
				this.grid[i] = false;
			}
		}
	}
}

function clearScreen()
{
	ctx.fillStyle = "#000000";
	ctx.fillRect(0, 0, canvas.width, canvas.height);
}

function writeText(x, y, scale, color, string)
{
	let rect  = [0, 0, 6, 6];
	let rectX = 0;
	let rectY = 0;
	let c     = 0;

	for (let i = 0; i < string.length; i++) {
		c = string.charCodeAt(i);
		if (c < 256) {
			rect[1] = Math.floor(c / 16) * 6;
			rect[0] = (c % 16) * 6;
			font.blit(rect, x, y, scale, color);
			x += 6 * scale;
		}
	}
}

window.addEventListener("load", () => {
	clearScreen();
	writeText(50, 100, 2, "#ff0000", "Hello, World!");
});
